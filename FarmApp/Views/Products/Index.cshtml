@model FarmApp.Models.ProductsViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager


@{
    ViewData["Title"] = "Index";
}

<h1>Produce</h1>

@* Add Search box *@

<div class="row">
  <div class="col-md-6">
    <form id="searchForm" asp-controller="Products" asp-action="Index" method="get">
      <div class="input-group">
        <input id="searchInput" type="text" class="form-control" name="search" placeholder="Search..." aria-label="Search for product" aria-describedby="basic-addon2" value="@Model.SearchTerm"/>
        <div class="input-group-append">
          <button class="btn btn-primary search-btn " type="submit">Submit</button>
          <button class="btn btn-secondary reset-btn" type="button">Reset</button>
        </div>
      </div>
    </form>
  </div>

  @* Add Sort dropdown *@
  <div class="col-md-6 text-right">
    <div class="dropdown">
      <button class="btn btn-primary dropdown-toggle" type="button" id="sortByDropdown" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Sort by
      </button>
        <div class="dropdown-menu dropdown-menu-right" aria-labelledby="sortByDropdown">
            <a class="dropdown-item @(Model.SortBy == "Title" ? "active" : "")" href="@Url.Action("Index", new { sortBy = "Title" })">Name</a>
            <a class="dropdown-item @(Model.SortBy == "Category" ? "active" : "")" href="@Url.Action("Index", new { sortBy = "Category" })">Category</a>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
    document.querySelector(".reset-btn").addEventListener("click", function () {
        document.querySelector("#searchInput").value = "";
        document.querySelector("#searchForm").submit();
    });
</script>


@* Shopping cart summary *@
<div>
  
</div>

@* Create product functionality *@
@if (User.IsInRole("Administrator"))
{
  <div class="container">
    <hr />
      <div class="p-3 mb-2 bg-dark text-white">
        <h5>[Administration Tools]</h5>
        <a asp-action="Create" class="btn btn-primary search-btn">Create New Product</a>
      </div>
    <hr />
  </div>
}
<br>

@* Add Product cards *@
@if (Model.Products != null && Model.Products.Any())
{
  <div class="container">
    <div class="row">
      @foreach (var product in Model.Products)
      {
        <div class="col-lg-4 col-md-6 mb-4">
          <div class="card h-100">
            <img class="card-img-top" src="@Html.DisplayFor(modelItem => product.Image)" alt="@Html.DisplayNameFor(model => product.Image)">
            <div class="card-body">
              <h5 class="card-title">@product.Title</h5> 

            </div>
            <ul class="list-group list-group-flush">
              <li class="list-group-item">@product.Category</li>
              <li class="list-group-item">@product.Size</li>
              <li class="list-group-item">@product.Price</li>

            </ul>
            <div class="card-body">
              <a class="btn btn-success float-right" asp-action="Details" asp-route-id="@product.Id">
                <i class="bi bi-eye-fill"></i> View Details
              </a>
              <a class="btn btn-primary float-right add-to-cart-btn" asp-controller="Cart" asp-action="Add" asp-route-id="@product.Id">
                <i id="AddToCart" class="bi bi-cart-plus"></i> Add to Cart
              </a>
              <a asp-controller="Cart" asp-action="Add" asp-route-id="@product.Id">
                <i id="ProductAdded" class="bi bi-cart-plus" style="display:none">Added to Cart</i>
              </a>
            </div>

            @if (User.IsInRole("Administrator"))
            {
              <div class="p-3 mb-2 bg-dark text-white">
              <div class="card-body">
                <h5>[Administration Tools]</h5>
                <a class="btn btn-warning" asp-action="Edit" asp-route-id="@product.Id">Edit</a>
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@product.Id">Delete</a>
              </div>
              </div>
            }
          </div>
        </div>
      }
    </div>
  </div>
}
else
{
  <p>No products found.</p>
}


@* Add Pagination buttons *@
<div class="container">
  <nav aria-label="Page navigation">
      <ul class="pagination">
          @for (int i = 1; i <= Model.TotalPages; i++) //Start at and display page 1, for as long as the value of total pages is less than i, then increment i and add a button
          {
              <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                  <a class="page-link" asp-action="Index" asp-route-pageNumber="@i">@i</a>
              </li>
          }
      </ul>
  </nav>
</div>
